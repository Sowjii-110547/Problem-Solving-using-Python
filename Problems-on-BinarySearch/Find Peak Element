"""
Description:
A peak element is an element that is strictly greater than its neighbors.
Given a 0-indexed integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.
You may imagine that nums[-1] = nums[n] = -âˆž. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.
"""
def findPeakElement(nums):
    n = len(nums)
    # Edge cases: single element, first element, last element
    if n == 1:
        return 0
    if nums[0] > nums[1]:
        return 0
    if nums[-1] > nums[-2]:
        return n - 1

    # Binary search between 1 and n-2
    low, high = 1, n - 2
    while low <= high:
        mid = (low + high) // 2

        # If mid is greater than both neighbors, it's a peak
        if nums[mid] > nums[mid - 1] and nums[mid] > nums[mid + 1]:
            return mid

        # If mid is increasing compared to left, peak lies on the right
        elif nums[mid] > nums[mid - 1]:
            low = mid + 1
        # Otherwise, peak lies on the left
        else:
            high = mid - 1
    return -1

nums = [1, 2, 1, 3, 5, 6, 4]
peak_index = findPeakElement(nums)
print(f"Peak element index: {peak_index}, value: {nums[peak_index]}")
